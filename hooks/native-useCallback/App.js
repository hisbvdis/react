// =============================================================================
// РОДИТЕЛЬСКИЙ КОМПОНЕНТ
// =============================================================================
import { useCallback, useState } from "react";
import Child from "./Child.js";

const App = () => {
  // 1. Состояние, при изменении которого обновляются текущий и дочерний компоненты
  const [number, setNumber] = useState(0);
  
  // 2. Функция, вызываемая дочерним компонентом (если её код изменился)
  
  // 2.1. Если объявлять обычно, функция будет вызываться при каждом обновлении
  // const func = () => console.log("Func");
  
  // 2.2. Чтобы функция не вызывалась при каждом обновлении, она объявляется
  // .... через хук "useCallback", возвращающий мемоизированный код
  const func = useCallback(() => console.log("Func"), []);

  return (<>
    {/* Дочерний компонент, из которого вызываются функции */}
    <Child func={func} />

    {/* Кнопка, изменяющая состояние, обновляя текущий и дочерний компоненты */}
    <button onClick={() => setNumber(prev => prev + 1)}>+1</button>
    <h1>{number}</h1>
  </>)
}

export default App;